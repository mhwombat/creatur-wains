------------------------------------------------------------------------
-- |
-- Module      :  ALife.Creatur.Wain.Maths
-- Copyright   :  (c) Amy de BuitlÃ©ir 2012-2013
-- License     :  BSD-style
-- Maintainer  :  amy@nualeargais.ie
-- Stability   :  experimental
-- Portability :  portable
--
-- ?????
--
------------------------------------------------------------------------
{-# LANGUAGE DefaultSignatures #-}
module ALife.Creatur.Wain.Maths
  (
    Pretty(..)
  ) where

import Data.Word (Word8, Word16)
import Text.Printf (printf)
import Numeric (showHex)

-- | A number on the unit interval 0 to 1, inclusive.
newtype UINumber = UINumber Double

toDouble :: UINumber -> Double
toDouble (UINumber x) = x

-- | The initial sequences stored at birth are genetically determined.
instance Genetic UINumber where
  put = G.put . fmap (scaleDoubleToWord8 unitInterval)
  get = return $ UINumber <$>
          fmap (fmap . fmap $ scaleWord8ToDouble unitInterval) G.get
